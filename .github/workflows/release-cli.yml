name: release-cli

permissions:
  contents: write

on:
  push:
    tags:
      - "cli/v*"

jobs:
  # build:
  #   name: Build binaries
  #   strategy:
  #     matrix:
  #       os:
  #         [
  #           ubuntu-24.04,
  #           ubuntu-24.04-arm,
  #           macos-latest,
  #           macos-13,
  #           windows-latest,
  #         ]
  #       include:
  #         - os: ubuntu-24.04
  #           GOOS: linux
  #           GOARCH: amd64
  #         - os: ubuntu-24.04-arm
  #           GOOS: linux
  #           GOARCH: arm64
  #         - os: macos-latest
  #           GOOS: darwin
  #           GOARCH: arm64
  #         - os: macos-13
  #           GOOS: darwin
  #           GOARCH: amd64
  #         - os: windows-latest
  #           GOOS: windows
  #           GOARCH: amd64
  #         - os: windows-11-arm
  #           GOOS: windows
  #           GOARCH: arm64
  #   runs-on: ${{ matrix.os }}
  #   outputs:
  #     artifacts: ${{ steps.upload.outputs.artifact-names }}
  #   steps:
  #     - name: Get tag name
  #       uses: olegtarasov/get-tag@2.1.3
  #       id: tagName
  #       with:
  #         tagRegex: "cli/v(.*)"
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #     - uses: pnpm/action-setup@v3
  #       with:
  #         version: 9
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version: "1.23.4"
  #         cache: false
  #     - name: Run build script
  #       run: make build VERSION=${{ steps.tagName.outputs.tag }}
  #     - name: Append os/arch to binary file name
  #       run: mv bin/kubetail bin/kubetail-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
  #     - name: Calculate sha256 checksum
  #       shell: bash
  #       run: |
  #         FILE=bin/kubetail-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
  #         OUTPUT_FILE=${FILE}.sha256
  #         if [ "$RUNNER_OS" == "Linux" ]; then
  #           sha256sum "$FILE" | cut -d " " -f 1 > "$OUTPUT_FILE"
  #         elif [ "$RUNNER_OS" == "Windows" ]; then
  #           certutil -hashfile "$FILE" SHA256 | awk 'NR==2' > "$OUTPUT_FILE"
  #         elif [ "$RUNNER_OS" == "macOS" ]; then
  #           shasum -a 256 "$FILE" | cut -d " " -f 1 > "$OUTPUT_FILE"
  #         fi
  #     - name: Create zip archive
  #       if: matrix.GOOS == 'windows'
  #       working-directory: ./bin
  #       shell: pwsh
  #       run: |
  #         $file = "kubetail-${{ matrix.GOOS }}-${{ matrix.GOARCH }}"
  #         Copy-Item -Path $file -Destination kubetail.exe
  #         Compress-Archive -Path kubetail.exe -DestinationPath "${file}.zip"
  #         (Get-FileHash -Algorithm SHA256 "${file}.zip").Hash |
  #           Out-File -FilePath "${file}.zip.sha256" -Encoding ascii
  #         Remove-Item kubetail.exe
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: artifacts-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
  #         path: bin/*

  # package-deb:
  #   name: build linux packages .deb and .rpm
  #   strategy:
  #     matrix:
  #       include:
  #         - pkg: deb
  #           GOOS: linux 
  #           GOARCH: amd64
  #           pkgArch: amd64
  #         # - pkg: rpm
  #         #   GOOS: linux 
  #         #   GOARCH: amd64
  #         #   pkgArch: amd64
  #         - pkg: deb
  #           GOOS: linux 
  #           GOARCH: arm64
  #           pkgArch: arm64
  #         # - pkg: rpm
  #         #   GOOS: linux 
  #         #   GOARCH: arm64
  #         #   pkgArch: arm64
  #   runs-on: ubuntu-24.04
  #   steps:
  #     - name: Get tag name
  #       uses: olegtarasov/get-tag@2.1.3
  #       id: tagName
  #       with:
  #         tagRegex: "cli/v(.*)"
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 22
  #     - uses: pnpm/action-setup@v3
  #       with:
  #         version: 9
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version: "1.23.4"
  #         cache: false
  #     - name: Run build script
  #       run: make build VERSION=${{ steps.tagName.outputs.tag }}
  #
  #     - name: create dir structure for .${{ matrix.pkg }} package
  #       run: |
  #         if [[ "${{ matrix.pkg }}" == "deb" ]]; then
  #             mkdir -p .debpkg/usr/bin
  #             cp -p bin/* .debpkg/usr/bin
  #         fi
  #
  #     - name: create a .deb package
  #       if: matrix.pkg == 'deb'
  #       uses: jiro4989/build-deb-action@v4
  #       with:
  #         package: kubetail
  #         package_root: .debpkg
  #         maintainer: Andres Amorey
  #         version: ${{ steps.tagName.outputs.tag }} 
  #         arch: ${{ matrix.pkgArch }}
  #         desc: cli tool to get realtime logs from kubernetes
  #
  #     - name: Calculate sha256 checksum 
  #       if: matrix.pkg == 'deb'
  #       run: |
  #         FILE='./kubetail_${{ steps.tagName.outputs.tag }}_${{ matrix.pkgArch }}.deb' 
  #         OUTPUT_FILE=${FILE}.sha256
  #         sha256sum "$FILE" | cut -d " " -f 1 > "$OUTPUT_FILE"
  #         mkdir -p deb-output
  #         mv ./kubetail* ./deb-output/ 
  #
  #     - name: Upload .deb artifacts
  #       if: matrix.pkg == 'deb'
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: artifacts-kubetail-${{ steps.tagName.outputs.tag }}-${{ matrix.pkgArch }} 
  #         path: deb-output/* 

  package-rpm:
    name: build rpm package 
    strategy:
      matrix:
        include:
          - pkg: rpm
            GOOS: linux 
            GOARCH: amd64
            pkgArch: amd64
          # - pkg: rpm
          #   GOOS: linux 
          #   GOARCH: arm64
          #   pkgArch: arm64
    runs-on: ubuntu-24.04
    steps:
      - name: Get tag name
        uses: olegtarasov/get-tag@2.1.3
        id: tagName
        with:
          tagRegex: "cli/v(.*)"
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 22
      - uses: pnpm/action-setup@v3
        with:
          version: 9
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
          cache: false
      - name: Run build script
        run: make build VERSION=${{ steps.tagName.outputs.tag }}

      - name: install the rpm and rpm build
        run: sudo apt install rpm rpm-build 

      - name: copy spec file to SPEC dir
        run: |
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          cp .github/workflows/kubetail-rpm.spec ~/rpmbuild/SPECS/kubetail.spec
           

      - name: create tarball for the binary
        run: |
           CLI_VER='${{ steps.tagName.outputs.tag }}'
           mkdir -p ~/rpmbuild/SOURCES/kubetail-${CLI_VER}
           mv bin/kubetail ~/rpmbuild/SOURCES/kubetail-${CLI_VER}
           cd ~/rpmbuild/SOURCES 
           tar czf "kubetail-${CLI_VER}.tar.gz" "kubetail-${CLI_VER}/"
           ls -la
           rm -rf "./kubetail-${CLI_VER}/"
         
      - name: build RPM package
        id: buildrpm 
        run: |
          CLI_VER='${{ steps.tagName.outputs.tag }}'
          
          if [[ "${{ matrix.pkgArch }}" == "amd64" ]]; then
            ARCH="x86_64"
          else
            ARCH="aarch64"
          fi

          echo "arch=$ARCH" >> $GITHUB_OUTPUT
          rpmbuild -ba ~/rpmbuild/SPECS/kubetail.spec --define "version ${CLI_VER}" --define "arch ${ARCH}"

      # - name: build RPM package
      #   id: rpm
      #   uses: naveenrajm7/rpmbuild@master
      #   with: 
      #     spec_file: ".github/workflows/kubetail-rpm.spec"
  
      - name: Upload rpm artifacts 
        uses: actions/upload-artifact@v4
        with:
          name: artifacts-${{ matrix.pkgArch }}-rpm
          path: ~/rpmbuild/RPMS/${{ steps.buildrpm.outputs.arch }}/* 


  release:
    name: Create GitHub release
    needs: package-rpm
    runs-on: ubuntu-24.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: bin
          pattern: artifacts-*
          merge-multiple: true
      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          files: bin/*
          draft: true
